{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique identifier string"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional Header View"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"0 to 3 Buttons"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/init(identifier:headerDisplay:actionButtons:)"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Modules are built and returned in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/addCustomModules(event:completion:)"}]},{"type":"codeListing","syntax":null,"code":["extension MyClass: TMTicketsModuleDelegate {    ","","    func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","        \/\/ build a UIView","        let view = UIView()","        view.backgroundColor = .red","    ","        \/\/ build Header with UIView","        let header = TMTicketsModule.HeaderDisplay(view: view)","    ","        \/\/ build buttons","        let button1 = TMTicketsModule.ActionButton(title: \"One\")","        let button2 = TMTicketsModule.ActionButton(title: \"Two\")","        let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","        \/\/ build module with header and buttons","        let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                    headerDisplay: header,","                                    actionButtons: [button1, button2, button3])","    ","        \/\/ return modules in display order","        completion([module])","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"},{"type":"text","text":" "},{"type":"image","identifier":"Module_DefaultAspect.jpg"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s examine each of these three values in detail."}]},{"anchor":"Identifier","level":2,"type":"heading","text":"Identifier"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A globally unique indentifier is best to avoid conflicts with any internal or pre-built module names."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We recommend using a reverse URL style."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unique examples:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“com.ticketmaster.seatUpgrades”"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“com.nfl.broncosSeating”"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“com.myDemoApp.demoModule”"}]}]}]},{"anchor":"Header","level":2,"type":"heading","text":"Header"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While optional, the Header is the most easily visible component of a Module."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Header ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/HeaderDisplay-swift.class"},{"type":"text","text":") is simply a wrapper around a UIView."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that a Module can contain a Header with no Buttons, or Buttons with no Header."}]},{"anchor":"Size","level":3,"type":"heading","text":"Size"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Header is automatically resized to the width of the user’s phone, so you can only really control the height. This is done by setting an aspect ratio."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default aspect ratio (3x2) is recommended for visual consistancy."}]},{"anchor":"Header-Default-Aspect-Ratio","level":2,"type":"heading","text":"Header Default Aspect Ratio"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with a Red header, using the default aspect ratio (3x2)."}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView (with default aspect ratio 3x2)","    let view = UIView()","    view.backgroundColor = .red","    ","    \/\/ build header with UIView","    let header = TMTicketsModule.HeaderDisplay(view: view)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_DefaultAspect.jpg"}]},{"anchor":"Header-Custom-Aspect-Ratio","level":2,"type":"heading","text":"Header Custom Aspect Ratio"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Header inherits it’s aspect ratio from the provided UIView, so by setting the size of the UIView you can alter the aspect ratio of the Header."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with a Red header, using a custom defined aspect ratio (1x1)."}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView (with a defined aspect ratio)","    let view = UIView(frame: CGRect(x: 0, y: 0, width: 1, height: 1))","    view.backgroundColor = .red","    ","    \/\/ build header with UIView","    let header = TMTicketsModule.HeaderDisplay(view: view)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_DefinedAspect.jpg"}]},{"anchor":"Custom-Header-Image","level":2,"type":"heading","text":"Custom Header Image"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Headers can also be created with a UIImage (as a convenience). The aspect ratio of the Header is inherited from the size of the UIImage."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with an Image header, aspect ratio is defined by Image size:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ load UIImage","    let image = UIImage(imageLiteralResourceName: \"HotDogs.jpg\")","    ","    \/\/ build header with UIImage","    let header = TMTicketsModule.HeaderDisplay(image: image)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_Image.jpg"}]},{"anchor":"HeaderView-Builder","level":2,"type":"heading","text":"HeaderView Builder"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you are welcome to build a Header using any UIView, a helpful Header builder has been provided."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView"},{"type":"text","text":" can help you quickly build a UIView for presentation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The header builder supports:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Three lines of custom Text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Gradient overlay (from top-left and bottom-right corners)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIColor background"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIImage background"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"MKCoordinateRegion map"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"QR Code"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"2D Barcode"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Audio\/Video Content"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)"}]}]}]}]}]},{"anchor":"HeaderView-Builder-Color","level":2,"type":"heading","text":"HeaderView Builder: Color"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with a Red header, using the Header View builder:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView (with default aspect ratio 3x2)","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(backgroundColor: .red)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_DefaultAspect.jpg"}]},{"anchor":"HeaderView-Builder-Image-+-Text-+-Gradient","level":2,"type":"heading","text":"HeaderView Builder: Image + Text + Gradient"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with an Image, Text, and Gradient:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ load UIImage","    let image = UIImage(imageLiteralResourceName: \"HotDogs.jpg\")","    ","    \/\/ build a UIView with a text, gradient, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Food\",","                         topLabelTextAlignment: .left,","                         centerLabelText: \"Drinks\",","                         centerLabelTextAlignment: .center,","                         bottomLabelText: \"Fun\",","                         bottomLabelTextAlignment: .right,","                         gradientAlpha: 1.0,","                         backgroundImage: image)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_ImageText.jpg"}]},{"anchor":"HeaderView-Builder-Map","level":2,"type":"heading","text":"HeaderView Builder: Map"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with a Map and Text:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ define map region and zoom (span)","    let mapRegion = MKCoordinateRegion(","        center: CLLocationCoordinate2D(latitude: 34.0734, longitude: -118.2402),","        span: MKCoordinateSpan(latitudeDelta: 0.02, longitudeDelta: 0.02))","    ","    \/\/ define map point of interest","    let mapAnnotation = TMTicketsModuleHeaderView.MapAnnotation(","        coordinate: CLLocationCoordinate2D(latitude: 34.0735, longitude: -118.2456),","        title: \"Lot 1\")","    ","    \/\/ build a UIView with a text, gradient, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Parking: Lot 1\",","                         mapCoordinateRegion: mapRegion,","                         mapAnnotation: mapAnnotation)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_MapText.jpg"}]},{"anchor":"HeaderView-Builder-QR-Code","level":2,"type":"heading","text":"HeaderView Builder: QR Code"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with a QR Code, Image, Gradient and Text:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build a UIView with a text, QR code, gradient, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Broncos Fan Voucher\",","                         bottomLabelText: \"Stored Value: $58.90\",","                         gradientAlpha: 1.0,","                         backgroundImage: UIImage(named: \"BroncosPlay.jpg\"),","                         qrCodeValue: \"1234567890ABCDEF\")","","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","","    \/\/ build module with header, but no buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: nil) \/\/ no buttons","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_QRText.jpg"}]},{"anchor":"HeaderView-Builder-Video","level":2,"type":"heading","text":"HeaderView Builder: Video"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The video will start playing as soon as the user scrolls down to the module."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build a module with a Video and Text:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ load video from local file or web URL","    let ticketsMovieURL = Bundle.main.url(forResource: \"BroncosMobileTickets\", withExtension: \"mp4\")!","    ","    \/\/ build a UIView with a text, QR code, and image","    let headerView = TMTicketsModuleHeaderView.build()","    headerView.configure(topLabelText: \"Entry Demo\",","                         avContentURL: ticketsMovieURL)","    ","    \/\/ build header with HeaderView (a UIView)","    let header = TMTicketsModule.HeaderDisplay(view: headerView)","","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\")","    let button2 = TMTicketsModule.ActionButton(title: \"Two\")","    let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: header,","                                 actionButtons: [button1, button2, button3])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Module_VideoText.jpg"}]},{"anchor":"Buttons","level":2,"type":"heading","text":"Buttons"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Buttons ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/ActionButton"},{"type":"text","text":") are assigned Actions that occur when the button is pressed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Currently, only two Actions are supported:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"open a given webpage inside Tickets SDK (in a webview)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"callback to module delegate (inside your app)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that a Module can contain a Header with no Buttons, or Buttons with no Header."}]},{"anchor":"Button-Action-Callback","level":2,"type":"heading","text":"Button Action: Callback"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If webpage settings are not defined on the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/ActionButton"},{"type":"text","text":", then when the user presses the button, the callback method on the module delegate will be called: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/handleModuleActionButton(event:module:button:completion:)"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build three buttons (with no header):"}]}]}]},{"type":"codeListing","syntax":null,"code":["extension MyClass: TMTicketsModuleDelegate {","    ","    func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","        \/\/ build buttons","        let button1 = TMTicketsModule.ActionButton(title: \"One\")","        let button2 = TMTicketsModule.ActionButton(title: \"Two\")","        let button3 = TMTicketsModule.ActionButton(title: \"Three\")","","        \/\/ build module with header and buttons","        let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                     headerDisplay: nil, \/\/ no header","                                     actionButtons: [button1, button2, button3])","        ","        \/\/ return module","        completion([module])","    }","    ","    func handleModuleActionButton(","        event: TMPurchasedEvent,","        module: TMTicketsModule,","        button: TMTicketsModule.ActionButton,","        completion: @escaping (TMTicketsModule.WebpageSettings?) -> Void) {","","        \/\/ this is not called if webpage settings are already defined","        if module.identifier == \"com.myDemoApp.demoModule\" {","            if button.callbackValue == \"One\" {","                print(\"Action: One\")","                \/\/ handle in your own code, do not close modal Tickets Listing page ","                \/\/ do not call completion","                handle(button: button)","                ","            } else if button.callbackValue == \"Two\" {","                print(\"Action: Two\")","                \/\/ handle in your own code, but first close modal Tickets Listing page","                \/\/ call completion with nil","                completion(nil)","                handle(button: button)","","            } else if button.callbackValue == \"Three\" {","                print(\"Action: Three\")","                \/\/ open a webpage inside Tickets SDK (webview)","                let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com\")!)","                let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                               urlRequest: request)","                \/\/ call completion with webpage settings","                completion(settings)","            }","        }","    }","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Button_Three.jpg"}]},{"anchor":"Button-Action-Callback-Completion","level":2,"type":"heading","text":"Button Action: Callback Completion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notice that the handleModuleActionButton delegate method has a completion closure."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is used to inform Tickets SDK of which behavior you would like when the user presses a Module Button."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not close modal Tickets Listing page and handle button in your own code:"}]}]}]},{"type":"codeListing","syntax":null,"code":["if button.callbackValue == \"One\" {","    print(\"Action: One\")","    \/\/ handle in your own code, do not close modal Tickets Listing page ","    \/\/ do not call completion","    handle(button: button)"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Close modal Tickets Listing page first, then handle button in your own code:"}]}]}]},{"type":"codeListing","syntax":null,"code":["} else if button.callbackValue == \"Two\" {","    print(\"Action: Two\")","    \/\/ handle in your own code, but first close modal Tickets Listing page","    \/\/ call completion with nil","    completion(nil)","    handle(button: button)"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not close modal Tickets Listing page, have Tickets SDK open a webpage for you:"}]}]}]},{"type":"codeListing","syntax":null,"code":["} else if button.callbackValue == \"Three\" {","    print(\"Action: Three\")","    \/\/ open a webpage inside Tickets SDK (webview)","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request)","    \/\/ call completion with webpage settings","    completion(settings)"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Button_MLBWebpage.jpg"}]},{"anchor":"Button-Action-Webpage-Settings","level":2,"type":"heading","text":"Button Action: Webpage Settings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can provide the Button webpage settings ahead of time instead of waiting for the callback."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that is this case, the handleModuleActionButton delegate method will not be called."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build one button with pre-defined webpage settings (with no header):"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build webpage settings","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\",","                                               webpageSettings: settings)","    ","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: nil, \/\/ no header","                                 actionButtons: [button1])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Output:"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Button_MLBWebpage.jpg"}]},{"anchor":"Button-Action-Webpage-Settings-+-State","level":2,"type":"heading","text":"Button Action: Webpage Settings + State"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typically you will want to pass in some state variables to the webpage. For example, maybe which event the user is viewing."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be done with URL parameters."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You may also want to pass values securely. For example, the user’s login state (oauth token)."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be done with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/OAuthCookieSettings"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build button with pre-defined webpage settings including eventID and user OAuthToken:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build cookie settings","    let cookie = TMTicketsModule.OAuthCookieSettings(name: \"userAuth\",","                                                     value: \"oauthToken1234\",","                                                     webDomains: [\".mlb.com\"])","    ","    \/\/ build webpage settings with parameters","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com?event=\\(event.info.identifier)\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request,","                                                   oauthCookieSettings: cookie)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\",","                                               webpageSettings: settings)","    ","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: nil, \/\/ no header","                                 actionButtons: [button1])","    ","    \/\/ return module","    completion([module])","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also easily attach Ticketmaster OAuth Tokens this way:"}]}]}]},{"type":"codeListing","syntax":null,"code":["func addCustomModules(event: TMPurchasedEvent, completion: @escaping ([TMTicketsModule]?) -> Void) {","    \/\/ build cookie settings (attaching Ticketmaster Archtics Modern Accounts token)","    let cookie = TMTicketsModule.OAuthCookieSettings(name: \"tmOAuth\",","                                                     webDomains: [\".mlb.com\"],","                                                     backend: .TeamModernAccounts)","    ","    \/\/ build webpage settings with parameters","    let request = URLRequest(url: URL(string: \"https:\/\/www.mlb.com?event=\\(event.info.identifier)\")!)","    let settings = TMTicketsModule.WebpageSettings(pageTitle: \"MLB Homepage\",","                                                   urlRequest: request,","                                                   oauthCookieSettings: cookie)","    ","    \/\/ build buttons","    let button1 = TMTicketsModule.ActionButton(title: \"One\",","                                               webpageSettings: settings)","    ","    \/\/ build module with header and buttons","    let module = TMTicketsModule(identifier: \"com.myDemoApp.demoModule\",","                                 headerDisplay: nil, \/\/ no header","                                 actionButtons: [button1])","    ","    \/\/ return module","    completion([module])","}"]},{"anchor":"Pre-Built-Modules","level":2,"type":"heading","text":"Pre-Built Modules"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A few basic modules have already been created for you, see: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsPrebuiltModule"}]},{"anchor":"API-Documentation","level":2,"type":"heading","text":"API Documentation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more options see: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/ticketmastertickets\/custommodules"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/ticketmastertickets\/custommodules"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/CustomModules","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule"},{"type":"text","text":" is defined by three values:"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Custom Module","role":"article","modules":[{"name":"TicketmasterTickets"}]},"hierarchy":{"paths":[["doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets"]]},"references":{"Module_Image.jpg":{"alt":"Image Header","type":"image","identifier":"Module_Image.jpg","variants":[{"url":"\/images\/Module_Image.jpg","traits":["1x","light"]}]},"Module_QRText.jpg":{"alt":"QR Code Header","type":"image","identifier":"Module_QRText.jpg","variants":[{"url":"\/images\/Module_QRText.jpg","traits":["1x","light"]}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/ActionButton":{"role":"symbol","title":"TMTicketsModule.ActionButton","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionButton"}],"abstract":[],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/ActionButton","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionButton"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/actionbutton"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView":{"role":"symbol","title":"TMTicketsModuleHeaderView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TMTicketsModuleHeaderView"}],"abstract":[{"type":"text","text":"quickly build a UIView for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TMTicketsModuleHeaderView"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets":{"role":"collection","title":"TicketmasterTickets","abstract":[{"type":"text","text":"Implementation of Ticketmaster post-purchase functionality such as viewing purchased Events, Tickets, and Barcodes."}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)":{"role":"symbol","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"gradientAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"backgroundImage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UIImage","preciseIdentifier":"c:objc(cs)UIImage"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"barcode2DValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"configure with background image and 2D barcode code"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:barcode2DValue:)","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundimage:barcode2dvalue:)"},"Module_DefinedAspect.jpg":{"alt":"1x1 Custom Aspect Header","type":"image","identifier":"Module_DefinedAspect.jpg","variants":[{"url":"\/images\/Module_DefinedAspect.jpg","traits":["1x","light"]}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/HeaderDisplay-swift.class":{"role":"symbol","title":"TMTicketsModule.HeaderDisplay","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeaderDisplay"}],"abstract":[],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/HeaderDisplay-swift.class","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HeaderDisplay"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/headerdisplay-swift.class"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/init(identifier:headerDisplay:actionButtons:)":{"role":"symbol","title":"init(identifier:headerDisplay:actionButtons:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headerDisplay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HeaderDisplay","preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC13HeaderDisplayC"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"actionButtons"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"ActionButton","preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC12ActionButtonC"},{"kind":"text","text":"]?)"}],"abstract":[{"type":"text","text":"create a module with the given identifier, header, and action buttons"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/init(identifier:headerDisplay:actionButtons:)","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/init(identifier:headerdisplay:actionbuttons:)"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)":{"role":"symbol","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"gradientAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"backgroundImage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UIImage","preciseIdentifier":"c:objc(cs)UIImage"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"configure with background image"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:)","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundimage:)"},"Button_Three.jpg":{"alt":"Buttons without Header","type":"image","identifier":"Button_Three.jpg","variants":[{"url":"\/images\/Button_Three.jpg","traits":["1x","light"]}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleDelegate/handleModuleActionButton(event:module:button:completion:)":{"role":"symbol","title":"handleModuleActionButton(event:module:button:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleModuleActionButton"},{"kind":"text","text":"("},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TMPurchasedEvent","preciseIdentifier":"s:19TicketmasterTickets16TMPurchasedEventV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"module"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TMTicketsModule","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":", "},{"kind":"externalParam","text":"button"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TMTicketsModule","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionButton","preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC12ActionButtonC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"openWebpageSettings"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TMTicketsModule","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WebpageSettings","preciseIdentifier":"s:19TicketmasterTickets15TMTicketsModuleC15WebpageSettingsC"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Method is invoked if user has pressed a button on a custom module, and unique handling is required."}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/handleModuleActionButton(event:module:button:completion:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduledelegate\/handlemoduleactionbutton(event:module:button:completion:)"},"Module_DefaultAspect.jpg":{"alt":"Color Header","type":"image","identifier":"Module_DefaultAspect.jpg","variants":[{"url":"\/images\/Module_DefaultAspect.jpg","traits":["1x","light"]}]},"Module_MapText.jpg":{"alt":"Map Header","type":"image","identifier":"Module_MapText.jpg","variants":[{"url":"\/images\/Module_MapText.jpg","traits":["1x","light"]}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)":{"role":"symbol","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"gradientAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"avContentURL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"disableLoopingContent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"disableAVAudio"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"configure with Audio\/Video content (typically a movie file)"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:avContentURL:disableLoopingContent:disableAVAudio:)","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:avcontenturl:disableloopingcontent:disableavaudio:)"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)":{"role":"symbol","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"gradientAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"backgroundColor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UIColor","preciseIdentifier":"c:objc(cs)UIColor"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"configure with background color"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundColor:)","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundcolor:)"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)":{"role":"symbol","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"gradientAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"mapCoordinateRegion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MKCoordinateRegion","preciseIdentifier":"c:@SA@MKCoordinateRegion"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mapAnnotation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MKAnnotation","preciseIdentifier":"c:objc(pl)MKAnnotation"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"configure with map region and annotation"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:mapCoordinateRegion:mapAnnotation:)","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:mapcoordinateregion:mapannotation:)"},"Module_VideoText.jpg":{"alt":"Video Header","type":"image","identifier":"Module_VideoText.jpg","variants":[{"url":"\/images\/Module_VideoText.jpg","traits":["1x","light"]}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleHeaderView/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)":{"role":"symbol","title":"configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"topLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"centerLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelText"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"bottomLabelTextAlignment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSTextAlignment","preciseIdentifier":"c:@E@NSTextAlignment"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"gradientAlpha"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGFloat","preciseIdentifier":"s:14CoreFoundation7CGFloatV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"backgroundImage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UIImage","preciseIdentifier":"c:objc(cs)UIImage"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"qrCodeValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"configure with background image and QR code"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleHeaderView\/configure(topLabelText:topLabelTextAlignment:centerLabelText:centerLabelTextAlignment:bottomLabelText:bottomLabelTextAlignment:gradientAlpha:backgroundImage:qrCodeValue:)","kind":"symbol","type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduleheaderview\/configure(toplabeltext:toplabeltextalignment:centerlabeltext:centerlabeltextalignment:bottomlabeltext:bottomlabeltextalignment:gradientalpha:backgroundimage:qrcodevalue:)"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule":{"role":"symbol","title":"TMTicketsModule","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TMTicketsModule"}],"abstract":[{"type":"text","text":"create a custom module to be displayed underneath the user’s list of Tickets on the Tickets listing page"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TMTicketsModule"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmodule"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModuleDelegate/addCustomModules(event:completion:)":{"role":"symbol","title":"addCustomModules(event:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addCustomModules"},{"kind":"text","text":"("},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TMPurchasedEvent","preciseIdentifier":"s:19TicketmasterTickets16TMPurchasedEventV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"customModuleArray"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"TMTicketsModule","preciseIdentifier":"c:@M@TicketmasterTickets@objc(cs)TMTicketsModule"},{"kind":"text","text":"]?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Method is invoked when the user is viewing a specific Event. Client app needs to define an array of custom modules (if any) and return them to the Tickets SDK."}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModuleDelegate\/addCustomModules(event:completion:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/ticketmastertickets\/tmticketsmoduledelegate\/addcustommodules(event:completion:)"},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsModule/OAuthCookieSettings":{"role":"symbol","title":"TMTicketsModule.OAuthCookieSettings","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OAuthCookieSettings"}],"abstract":[],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule\/OAuthCookieSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OAuthCookieSettings"}],"url":"\/documentation\/ticketmastertickets\/tmticketsmodule\/oauthcookiesettings"},"Button_MLBWebpage.jpg":{"alt":"MLB Webpage","type":"image","identifier":"Button_MLBWebpage.jpg","variants":[{"url":"\/images\/Button_MLBWebpage.jpg","traits":["1x","light"]}]},"Module_ImageText.jpg":{"alt":"Image Text Gradient Header","type":"image","identifier":"Module_ImageText.jpg","variants":[{"url":"\/images\/Module_ImageText.jpg","traits":["1x","light"]}]},"doc://com.ticketmaster.TicketmasterTickets/documentation/TicketmasterTickets/TMTicketsPrebuiltModule":{"role":"symbol","title":"TMTicketsPrebuiltModule","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TMTicketsPrebuiltModule"}],"abstract":[{"type":"text","text":"useful pre-built "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsModule"},{"type":"text","text":" for the Tickets listing page"}],"identifier":"doc:\/\/com.ticketmaster.TicketmasterTickets\/documentation\/TicketmasterTickets\/TMTicketsPrebuiltModule","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TMTicketsPrebuiltModule"}],"url":"\/documentation\/ticketmastertickets\/tmticketsprebuiltmodule"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModuleHeaderView\/title","value":"TMTicketsModuleHeaderView"},{"op":"replace","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModuleHeaderView\/fragments","value":[{"kind":"identifier","text":"TMTicketsModuleHeaderView"}]},{"op":"replace","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModule\/title","value":"TMTicketsModule"},{"op":"replace","path":"\/references\/doc:~1~1com.ticketmaster.TicketmasterTickets~1documentation~1TicketmasterTickets~1TMTicketsModule\/fragments","value":[{"kind":"identifier","text":"TMTicketsModule"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}